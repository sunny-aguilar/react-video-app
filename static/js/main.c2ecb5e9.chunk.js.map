{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","props","onInputChange","event","setState","term","target","value","onFormSubmit","preventDefault","state","className","onSubmit","this","type","onChange","role","React","Component","axios","create","baseURL","VideoItem","video","onVideoSelect","onClick","id","src","snippet","thumbnails","medium","url","alt","title","channelTitle","VideoList","videos","renderedList","map","key","videoId","VideoDetail","videoSrc","description","App","onTermSubmit","a","youtube","get","params","q","part","maxResults","response","console","log","data","items","selectedVideo","ReactDOM","render","document","querySelector"],"mappings":"+QA8CeA,G,wDA1Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAPlB,EAWnBC,aAAe,SAACL,GACdA,EAAMM,iBAEN,EAAKR,MAAMO,aAAa,EAAKE,MAAML,OAZnC,EAAKK,MAAQ,CAAEL,KAAM,IAFJ,E,qDAoBjB,OACE,yBAAKM,UAAU,yBACb,0BAAMA,UAAU,UAAUC,SAAUC,KAAKL,cACvC,yBAAKG,UAAU,SACb,+CACA,2BACEG,KAAK,OACLP,MAAOM,KAAKH,MAAML,KAClBU,SAAUF,KAAKX,kBAIrB,yBAAKc,KAAK,WAAWL,UAAU,QAC7B,yBAAKA,UAAU,2BACb,uBAAGA,UAAU,oBADf,iC,GAlCcM,IAAMC,Y,QCCfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0CCeIC,G,MAhBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQG,GAAG,GAAGf,UAAU,mBACxD,yBACEA,UAAU,WACVgB,IAAKJ,EAAMK,QAAQC,WAAWC,OAAOC,IACrCC,IAAKT,EAAMK,QAAQK,QAErB,yBAAKtB,UAAU,WACb,yBAAKA,UAAU,UAAUY,EAAMK,QAAQM,cACvC,yBAAKvB,UAAU,eAAeY,EAAMK,QAAQK,WCGrCE,EAbG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQZ,EAAoB,EAApBA,cACrBa,EAAeD,EAAOE,KAAI,SAACf,GAC/B,OACE,kBAAC,EAAD,CACEgB,IAAKhB,EAAMG,GAAGc,QACdhB,cAAeA,EACfD,MAAOA,OAIb,OAAO,yBAAKZ,UAAU,2BAA2B0B,ICQpCI,EApBK,SAAC,GAAe,IAAblB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,2CAGT,IAAMmB,EAAQ,wCAAoCnB,EAAMG,GAAGc,SAE3D,OACE,6BACE,yBAAK7B,UAAU,YACb,4BAAQsB,MAAM,eAAeN,IAAKe,KAEpC,yBAAK/B,UAAU,cACb,wBAAIA,UAAU,UAAUY,EAAMK,QAAQK,OACtC,2BAAIV,EAAMK,QAAQe,gBCmDXC,E,kDAzDb,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IAWR4C,aAZmB,uCAYJ,WAAOxC,GAAP,eAAAyC,EAAA,sEACUC,EAAQC,IAAI,UAAW,CAC5CC,OAAQ,CACNC,EAAG7C,EACHkC,IAnBI,0CAoBJY,KAAM,UACNC,WAAY,EACZtC,KAAM,WAPG,OACPuC,EADO,OAWbC,QAAQC,IAAIF,GACZ,EAAKjD,SAAS,CACZgC,OAAQiB,EAASG,KAAKC,MACtBC,cAAeL,EAASG,KAAKC,MAAM,KAdxB,2CAZI,wDA8BnBjC,cAAgB,SAACD,GACf,EAAKnB,SAAS,CAAEsD,cAAenC,KA7B/B,EAAKb,MAAQ,CAAE0B,OAAQ,GAAIsB,cAAe,MAFzB,E,gEAQjB7C,KAAKgC,aAAa,c,+BA2BlB,OACE,yBAAKlC,UAAU,gBACb,kBAAC,EAAD,CAAWH,aAAcK,KAAKgC,eAE9B,yBAAKlC,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAaY,MAAOV,KAAKH,MAAMgD,iBAEjC,yBAAK/C,UAAU,oBACb,kBAAC,EAAD,CACEa,cAAeX,KAAKW,cACpBY,OAAQvB,KAAKH,MAAM0B,iB,GAhDjBnB,IAAMC,WCLxByC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.c2ecb5e9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { term: \"\" };\n  }\n\n  // what happens when you type into input element (controlled element)\n  onInputChange = (event) => {\n    this.setState({ term: event.target.value });\n  };\n\n  // when form is submitted\n  onFormSubmit = (event) => {\n    event.preventDefault(); // prevents page from refreshing\n    // TODO: make sure we call callback from parent component\n    this.props.onFormSubmit(this.state.term);\n  };\n\n  render() {\n    // onChange() is a special property name that must be named this way to\n    // invoke it\n    return (\n      <div className=\"search-bar ui segment\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <label>Video Search</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={this.onInputChange}\n            />\n          </div>\n        </form>\n        <div role=\"listitem\" className=\"item\">\n          <div className=\"ui red horizontal label\">\n            <i className=\"power cord icon\"></i>API Powered by: YouTube\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from \"axios\";\n\n// GET https://www.googleapis.com/youtube/v3/search\n\nexport default axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n});\n","import React from \"react\";\nimport \"./VideoItem.css\";\n\n// props.videos.snippet.channelTitle\nconst VideoItem = ({ video, onVideoSelect }) => {\n  return (\n    <div onClick={() => onVideoSelect(video)} id=\"\" className=\"video-item item\">\n      <img\n        className=\"ui image\"\n        src={video.snippet.thumbnails.medium.url}\n        alt={video.snippet.title}\n      />\n      <div className=\"content\">\n        <div className=\"header\">{video.snippet.channelTitle}</div>\n        <div className=\"description\">{video.snippet.title}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"./VideoItem\";\n\n// { videos } is a destructured variable from props\nconst VideoList = ({ videos, onVideoSelect }) => {\n  const renderedList = videos.map((video) => {\n    return (\n      <VideoItem\n        key={video.id.videoId}\n        onVideoSelect={onVideoSelect}\n        video={video}\n      />\n    );\n  });\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\n};\n\nexport default VideoList;\n","import React from \"react\";\n\nconst VideoDetail = ({ video }) => {\n  if (!video) {\n    return <div>Loading...</div>;\n  }\n\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n\n  return (\n    <div>\n      <div className=\"ui embed\">\n        <iframe title=\"video player\" src={videoSrc} />\n      </div>\n      <div className=\"ui segment\">\n        <h4 className=\"header\">{video.snippet.title}</h4>\n        <p>{video.snippet.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoDetail;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport youtube from \"../apis/youtube\";\nimport VideoList from \"./VideoList\";\nimport VideoDetail from \"./VideoDetail\";\n\n// YouTube API Key:\nconst KEY = \"AIzaSyDCIBaO57Z3538VcxlmNRGEvY0K2JA8FV0\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { videos: [], selectedVideo: null };\n  }\n\n  // loads an initial video on app\n  componentDidMount() {\n    // initial video term can be changed to any search term\n    this.onTermSubmit(\"scooters\");\n  }\n\n  // callback for SearchBar\n  onTermSubmit = async (term) => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: term,\n        key: KEY,\n        part: \"snippet\",\n        maxResults: 5,\n        type: \"video\",\n      },\n    });\n\n    console.log(response);\n    this.setState({\n      videos: response.data.items,\n      selectedVideo: response.data.items[0],\n    });\n  };\n\n  onVideoSelect = (video) => {\n    this.setState({ selectedVideo: video });\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <SearchBar onFormSubmit={this.onTermSubmit} />\n        {/* prop can be called the same name as function */}\n        <div className=\"ui grid\">\n          <div className=\"ui row\">\n            <div className=\"eleven wide column\">\n              <VideoDetail video={this.state.selectedVideo} />\n            </div>\n            <div className=\"five wide column\">\n              <VideoList\n                onVideoSelect={this.onVideoSelect}\n                videos={this.state.videos}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}